name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate application.properties
        run: |
          echo "spring.application.name=rental_backend" > src/main/resources/application.properties
          echo "spring.data.mongodb.uri=${{ secrets.MONGODB_URI }}" >> src/main/resources/application.properties
          echo "spring.datasource.url=${{ secrets.DATASOURCE_URL }}" >> src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.DATASOURCE_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DATASOURCE_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
          echo "spring.jpa.open-in-view=false" >> src/main/resources/application.properties
          echo "spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Taipei" >> src/main/resources/application.properties
          echo "jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application.properties
          echo "cors.allow.origins=${{ secrets.CORS_ALLOW_ORIGINS }}" >> src/main/resources/application.properties
          echo "spring.data.redis.host=${{ secrets.REDIS_HOST }}" >> src/main/resources/application.properties
          echo "spring.data.redis.port=6379" >> src/main/resources.application.properties
          echo "spring.data.redis.password=${{ secrets.REDIS_PASSWORD }}" >> src/main/resources.application.properties
          echo "spring.data.redis.ssl.enabled=true" >> src/main/resources/application.properties
          echo "amazon.aws.region=${{ secrets.AWS_REGION }}" >> src/main/resources/application.properties
          echo "google.api.key=${{ secrets.GOOGLE_API_KEY }}" >> src/main/resources/application.properties
          echo "google.api.geocoding.url=https://maps.googleapis.com/maps/api/geocode/json" >> src/main/resources/application.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build backend Docker image
        run: |
          docker build -t james66689/rental_backend:latest -f ./Dockerfile .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Push backend Docker image
        run: |
          docker push james66689/rental_backend:latest

  build-and-push-frontend:
    needs: build-and-push-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Bulid React project
        run: npm run build

      - name: Upload to S3
        uses: shallwefootball/s3-upload-action@master
        id: S3
        with:
          aws_key_id: ${{secrets.AWS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: rental-sideproject
          source_dir: ./rental_frontend/build
